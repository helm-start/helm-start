global:
  hosts:
    postgresql: demo-postgresql
    rabbitmq: demo-rabbitmq
  ports:
    postgresql: 5432
    rabbitmq: 5672

affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
fullnameOverride: test
image:
  pullPolicy: Always
  repository: test
  secrets: []
  tag: 1.0.0
imagePullSecrets: []
ingress:
  annotations: {}
  className: ''
  enabled: false
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
nameOverride: ''
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 8080
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: false
  name: ''
tolerations: []

rabbitmq:
  fullnameOverride: demo-rabbitmq
  nameOverride: demo-rabbitmq
  port: 5672
  enabled: true
  auth:
    password: guest
    username: guest
  vhost: /

healthcheck:
  port: 8090
  name: healthcheck

postgresql:
  database: postgres
  architecture: standalone
  primary:
    persistence:
      size: 1Gi
      enabled: true
      storageClass: ''
      accessModes:
        - ReadWriteOnce
  fullnameOverride: demo-postgresql
  nameOverride: demo-postgresql
  enabled: true
  auth:
    password: postgres
    username: postgres

